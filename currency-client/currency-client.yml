server:
  port: 0
spring:
  application:
    name: currency-client
  eureka:
    client:
      service-url:
        defaultZone: ${EUREKA_URL}
    instance:
      instance-id: ${spring.application.name}:${random.uuid}
  data:
    cassandra:
      keyspace-name: query
      contact-points: cassandra
      port: 9042
      username: cassandra
      password: "{cipher}AQBcTyIO7Hs6kQP3GFMq/QYS/1VgalUjkiNgzTDbansoj+PKtYFmXY7rGlyO+jGuc0Tlz3GZel8iIOe7GgFRmSxE8sDRzM1wwSXUFPgOL2Uw542/6POJIpHELn3RfsmQr/wehO79sU98lWG9bBSlrM2hWy9jFcyjkfFJ72W+bWUcu0kgZ3hvDXb/DAAaeVU5nnuB1PTirph5QjtC0/nTvPZhjqtH2EZDO5OudQhfQUWJkN8hQQH/oMKiIV/Vv6x+gSojwJ0MBxd+o4/wJ0YuFuRK3lAEIcn9f2NTuTLo0Jugj2AbxpPmWBGPR/7mhsRpNNZ1hzBT1sx0rpnC6CNqZZ+XgaOWXCYxWnPh0NAwce5tO5HTmgUqZQY8ZOrdhK9vqC0="
#      password: cassandra
      local-datacenter: datacenter1
      schema-action: CREATE_IF_NOT_EXISTS
      request:
        timeout: 10s
  kafka:
    producer:
      bootstrapServers: kafka:9092
      auto-offset-reset: earliest
      group_id: message
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.use.type.headers: false
        spring.serializer.key.delegate.class: org.apache.kafka.common.serialization.StringSerializer
        spring.serializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonSerializer
    topics:
      message: message

  redis:
    host: redis
    port: 6379
    client-name: ${spring.application.name}
    client-type: lettuce #provide reactive connection
    date_format: "dd-MM-yyyy"
    time_format: "HH:mm:ss"

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

currency:
#  fixedRate: 180000
  cron: 0 0 13 * * 1-5
#  cron: 0 13 * * * 1-5
  zone: "Europe/Minsk"
