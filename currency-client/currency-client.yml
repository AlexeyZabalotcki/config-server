server:
  port: 0
spring:
  application:
    name: currency-client
  eureka:
    client:
      service-url:
        defaultZone: ${EUREKA_URL}
    instance:
      instance-id: ${spring.application.name}:${random.uuid}
  cassandra:
    keyspace-name: query
    contact-points: cassandra:9042
#    local-datacenter: datacenter1
    schema-action: CREATE_IF_NOT_EXISTS
  kafka:
    producer:
      bootstrapServers: kafka:9092
      auto-offset-reset: earliest
      group_id: message
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.trusted.packages: '*'
        spring.json.use.type.headers: false
        spring.serializer.key.delegate.class: org.apache.kafka.common.serialization.StringSerializer
        spring.serializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonSerializer
    topics:
      message: message

  redis:
    host: redis
    port: 6379
    client-name: ${spring.application.name}
    client-type: lettuce #provide reactive connection
    date_format: "dd-MM-yyyy"
    time_format: "HH:mm:ss"
